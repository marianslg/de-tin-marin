---
const { images, delay } = Astro.props;
const uniqueId = Math.random().toString(36).substring(2, 9);
// Garantizar que delay sea un n√∫mero
const delayMs = typeof delay === 'number' ? delay : 3000;
---

<div id={`carousel-${uniqueId}`} class="relative w-full h-full overflow-hidden">
  {images.map((src, i) => (
    <div
      class="absolute inset-0 transition-opacity duration-1000 ease-in-out"
      data-slide-index={i}
      style={`opacity: ${i === 0 ? 1 : 0}`}
    >
      <img
        src={src}
        alt={`Slide ${i+1}`}
        class="w-full h-full object-cover rounded-xl shadow-lg"
      />
    </div>
  ))}
</div>

<script define:vars={{uniqueId, delayMs}}>
  document.addEventListener('DOMContentLoaded', () => {
    let idx = 0;
    const container = document.getElementById(`carousel-${uniqueId}`);
    const slides = container.querySelectorAll('[data-slide-index]');
    const total = slides.length;
    
    if (total <= 1) return;

    
    
    setInterval(() => {
      slides[idx].style.opacity = 0;
      idx = (idx + 1) % total;
      slides[idx].style.opacity = 1;
    }, 4000 + delayMs); // 4000ms for initial delay plus any additional delay
  });
</script>